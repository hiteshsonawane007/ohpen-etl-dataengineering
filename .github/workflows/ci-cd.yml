name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          pytest --maxfail=1 --disable-warnings -q

  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest
    needs: test
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

        # Package the contents of the etl folder into a ZIP file.
      - name: Package ETL Scripts
        run: |
          zip -r etl_package.zip __main__.py etl/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: 1.11.1

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        #run: terraform plan -out=tfplan
        run: terraform plan -destroy -out=destroy-tfplan

      # Uncomment the following apply step once you are ready for auto deployment.
      - name: Terraform Apply
        working-directory: terraform
        #run: terraform apply -auto-approve tfplan
        run: terraform destroy -auto-approve destroy-tfplan
